apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "microservice-chart.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "microservice-chart.labels" . | nindent 4 }}
  {{- with include "microservice-chart.annotations" . }}
  annotations:
    {{- . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "microservice-chart.selectorLabels" . | nindent 6 }}
  strategy:
    type: {{ .Values.deploymentStrategy.type }}
    {{- if eq .Values.deploymentStrategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deploymentStrategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deploymentStrategy.rollingUpdate.maxSurge }}
    {{- end }}
  template:
    metadata:
      annotations:
        {{- include "microservice-chart.podAnnotations" . | nindent 8 }}
      labels:
        {{- include "microservice-chart.selectorLabels" . | nindent 8 }}
        {{- if .Values.podLabels }}
        {{- toYaml .Values.podLabels | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "microservice-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        {{- toYaml .Values.initContainers | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if .Values.command }}
          command:
            {{- toYaml .Values.command | nindent 12 }}
          {{- end }}
          {{- if .Values.args }}
          args:
            {{- toYaml .Values.args | nindent 12 }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.service.additionalPorts }}
            {{- range .Values.service.additionalPorts }}
            - name: {{ .name }}
              containerPort: {{ .containerPort }}
              protocol: {{ .protocol | default "TCP" }}
            {{- end }}
            {{- end }}
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            {{- if eq .Values.probes.liveness.type "http" }}
            httpGet:
              path: {{ .Values.probes.liveness.httpGet.path }}
              port: {{ .Values.probes.liveness.httpGet.port | default "http" }}
              {{- if .Values.probes.liveness.httpGet.scheme }}
              scheme: {{ .Values.probes.liveness.httpGet.scheme }}
              {{- end }}
              {{- if .Values.probes.liveness.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml .Values.probes.liveness.httpGet.httpHeaders | nindent 16 }}
              {{- end }}
            {{- else if eq .Values.probes.liveness.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.liveness.tcpSocket.port | default "http" }}
            {{- else if eq .Values.probes.liveness.type "exec" }}
            exec:
              command:
                {{- toYaml .Values.probes.liveness.exec.command | nindent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.liveness.successThreshold }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            {{- if eq .Values.probes.readiness.type "http" }}
            httpGet:
              path: {{ .Values.probes.readiness.httpGet.path }}
              port: {{ .Values.probes.readiness.httpGet.port | default "http" }}
              {{- if .Values.probes.readiness.httpGet.scheme }}
              scheme: {{ .Values.probes.readiness.httpGet.scheme }}
              {{- end }}
              {{- if .Values.probes.readiness.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml .Values.probes.readiness.httpGet.httpHeaders | nindent 16 }}
              {{- end }}
            {{- else if eq .Values.probes.readiness.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.readiness.tcpSocket.port | default "http" }}
            {{- else if eq .Values.probes.readiness.type "exec" }}
            exec:
              command:
                {{- toYaml .Values.probes.readiness.exec.command | nindent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
            successThreshold: {{ .Values.probes.readiness.successThreshold }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
          {{- end }}
          {{- if .Values.probes.startup.enabled }}
          startupProbe:
            {{- if eq .Values.probes.startup.type "http" }}
            httpGet:
              path: {{ .Values.probes.startup.httpGet.path }}
              port: {{ .Values.probes.startup.httpGet.port | default "http" }}
              {{- if .Values.probes.startup.httpGet.scheme }}
              scheme: {{ .Values.probes.startup.httpGet.scheme }}
              {{- end }}
              {{- if .Values.probes.startup.httpGet.httpHeaders }}
              httpHeaders:
                {{- toYaml .Values.probes.startup.httpGet.httpHeaders | nindent 16 }}
              {{- end }}
            {{- else if eq .Values.probes.startup.type "tcp" }}
            tcpSocket:
              port: {{ .Values.probes.startup.tcpSocket.port | default "http" }}
            {{- else if eq .Values.probes.startup.type "exec" }}
            exec:
              command:
                {{- toYaml .Values.probes.startup.exec.command | nindent 16 }}
            {{- end }}
            initialDelaySeconds: {{ .Values.probes.startup.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.startup.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.startup.timeoutSeconds }}
            successThreshold: {{ .Values.probes.startup.successThreshold }}
            failureThreshold: {{ .Values.probes.startup.failureThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            {{- if .Values.env }}
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if .Values.configMap.enabled }}
            {{- range $key, $value := .Values.configMap.data }}
            - name: {{ $key }}
              valueFrom:
                configMapKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- if .Values.secret.enabled }}
            {{- range $key, $value := .Values.secret.data }}
            - name: {{ $key }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "microservice-chart.fullname" $ }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
          {{- if or .Values.volumeMounts .Values.configMap.mountPath .Values.secret.mountPath }}
          volumeMounts:
            {{- if .Values.configMap.enabled and .Values.configMap.mountPath }}
            - name: config-volume
              mountPath: {{ .Values.configMap.mountPath }}
              {{- if .Values.configMap.subPath }}
              subPath: {{ .Values.configMap.subPath }}
              {{- end }}
              readOnly: true
            {{- end }}
            {{- if .Values.secret.enabled and .Values.secret.mountPath }}
            - name: secret-volume
              mountPath: {{ .Values.secret.mountPath }}
              {{- if .Values.secret.subPath }}
              subPath: {{ .Values.secret.subPath }}
              {{- end }}
              readOnly: true
            {{- end }}
            {{- if .Values.volumeMounts }}
            {{- toYaml .Values.volumeMounts | nindent 12 }}
            {{- end }}
          {{- end }}
      {{- if or .Values.volumes .Values.configMap.mountPath .Values.secret.mountPath }}
      volumes:
        {{- if .Values.configMap.enabled and .Values.configMap.mountPath }}
        - name: config-volume
          configMap:
            name: {{ include "microservice-chart.fullname" . }}
            {{- if .Values.configMap.defaultMode }}
            defaultMode: {{ .Values.configMap.defaultMode }}
            {{- end }}
            {{- if .Values.configMap.items }}
            items:
              {{- toYaml .Values.configMap.items | nindent 14 }}
            {{- end }}
        {{- end }}
        {{- if .Values.secret.enabled and .Values.secret.mountPath }}
        - name: secret-volume
          secret:
            secretName: {{ include "microservice-chart.fullname" . }}
            {{- if .Values.secret.defaultMode }}
            defaultMode: {{ .Values.secret.defaultMode }}
            {{- end }}
            {{- if .Values.secret.items }}
            items:
              {{- toYaml .Values.secret.items | nindent 14 }}
            {{- end }}
        {{- end }}
        {{- if .Values.volumes }}
        {{- toYaml .Values.volumes | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
